Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.13.2/x64/lib/python3.13/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
    ~~~~~~~~~^
        nb,
        ^^^
    ...<4 lines>...
        **kwargs,
        ^^^^^^^^^
    )
    ^
  File "/opt/hostedtoolcache/Python/3.13.2/x64/lib/python3.13/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/opt/hostedtoolcache/Python/3.13.2/x64/lib/python3.13/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "/opt/hostedtoolcache/Python/3.13.2/x64/lib/python3.13/asyncio/base_events.py", line 725, in run_until_complete
    return future.result()
           ~~~~~~~~~~~~~^^
  File "/opt/hostedtoolcache/Python/3.13.2/x64/lib/python3.13/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
        cell, index, execution_count=self.code_cells_executed + 1
    )
  File "/opt/hostedtoolcache/Python/3.13.2/x64/lib/python3.13/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/hostedtoolcache/Python/3.13.2/x64/lib/python3.13/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import requests
from PIL import Image
import matplotlib.pyplot as plt
import matplotlib.patches as patches
import io
import getpass

# -------------------------------
# Setup form for API key
# -------------------------------
API_KEY = getpass.getpass("Enter your API key: ")

# -------------------------------
# Config
# -------------------------------
API_BASE_URL = "https://connect.fisheries.noaa.gov/ai4me"
URCHIN_ENDPOINT = f"{API_BASE_URL}/predict/urchin"

# -------------------------------
# Function to display detections
# -------------------------------
def display_urchin_detections(image_path):
    headers = {"X-API-KEY": API_KEY}

    # Handle local vs. remote image
    if image_path.startswith("http"):
        r = requests.get(image_path)
        r.raise_for_status()
        file_obj = io.BytesIO(r.content)
    else:
        file_obj = open(image_path, "rb")

    files = {"file": file_obj}
    response = requests.post(URCHIN_ENDPOINT, headers=headers, files=files)

    # Print response for debugging
    print("Response status:", response.status_code)
    print("Response text:", response.text)

    if response.status_code == 200:
        detections = response.json().get("detections", [])
        image = Image.open(file_obj)

        # Create Matplotlib figure
        fig, ax = plt.subplots(figsize=(10, 10))
        ax.imshow(image)

        for det in detections:
            bbox = det["bbox"]
            cls = det["class"]
            confidence = det["confidence"]
            label = f"{cls} ({confidence*100:.1f}%)"

            # Extract bbox coordinates
            x_min, y_min, x_max, y_max = bbox
            width, height = x_max - x_min, y_max - y_min

            # Draw bounding box
            rect = patches.Rectangle((x_min, y_min), width, height, linewidth=3, edgecolor='red', facecolor='none')
            ax.add_patch(rect)

            # Add label with background
            ax.text(x_min, y_min - 5, label, fontsize=14, color="white",
                    bbox=dict(facecolor='black', alpha=0.75, edgecolor='none', boxstyle="round,pad=0.3"))

        ax.axis("off")
        plt.show()
    else:
        print("Request failed:", response.text)

    if not image_path.startswith("http"):
        file_obj.close()

# -------------------------------
# Run Test
# -------------------------------
display_urchin_detections("https://storage.googleapis.com/nmfs_odp_pifsc/PIFSC/ESD/ARP/data_management/temp/example_urchin.jpg")

------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mModuleNotFoundError[0m                       Traceback (most recent call last)
Cell [0;32mIn[1], line 3[0m
[1;32m      1[0m [38;5;28;01mimport[39;00m[38;5;250m [39m[38;5;21;01mrequests[39;00m
[1;32m      2[0m [38;5;28;01mfrom[39;00m[38;5;250m [39m[38;5;21;01mPIL[39;00m[38;5;250m [39m[38;5;28;01mimport[39;00m Image
[0;32m----> 3[0m [38;5;28;01mimport[39;00m[38;5;250m [39m[38;5;21;01mmatplotlib[39;00m[38;5;21;01m.[39;00m[38;5;21;01mpyplot[39;00m[38;5;250m [39m[38;5;28;01mas[39;00m[38;5;250m [39m[38;5;21;01mplt[39;00m
[1;32m      4[0m [38;5;28;01mimport[39;00m[38;5;250m [39m[38;5;21;01mmatplotlib[39;00m[38;5;21;01m.[39;00m[38;5;21;01mpatches[39;00m[38;5;250m [39m[38;5;28;01mas[39;00m[38;5;250m [39m[38;5;21;01mpatches[39;00m
[1;32m      5[0m [38;5;28;01mimport[39;00m[38;5;250m [39m[38;5;21;01mio[39;00m

[0;31mModuleNotFoundError[0m: No module named 'matplotlib'

